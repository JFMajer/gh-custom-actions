name: Deployment
on:

  workflow_dispatch:
  push:
    paths-ignore:
    - 'README.md'
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies using custom action
        uses: ./.github/actions/cached-deps # path relative to root of repo
        id: cache-in-lint
        with:
          caching: false
      - name: output information
        run: echo "${{ steps.cache-in-lint.outputs.cache-used }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies using custom action
        id: cache-in-test
        uses: ./.github/actions/cached-deps # path relative to repo
      - name: output information
        run: echo "${{ steps.cache-in-test.outputs.cache-used }}"
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies using custom action
        uses: ./.github/actions/cached-deps # path relative to repo
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    permissions:
      id-token: write
      contents: read
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    outputs:
      website-url: ${{ steps.deploy.outputs.website-url }}
      success: ${{ steps.deploy.outputs.success }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: |
          pwd
          echo "********************************"
          ls
          echo "********************************"
          ls -la dist/
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-javascript # path relative to repo
        with:
          bucket-name: ${{ vars.BUCKET_NAME }}
          region: ${{ vars.AWS_REGION }}
          dist-folder: ./dist
  output_summary:
    if: ${{ !failure() }}
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Output website URL
        run: echo "${{ needs.deploy.outputs.website-url }}"